[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Base de donn√©es relationnelles",
    "section": "",
    "text": "6h de cours\n18h de TP/TD"
  },
  {
    "objectID": "doc/cours/jointures.html",
    "href": "doc/cours/jointures.html",
    "title": "Jointures entre Tables",
    "section": "",
    "text": "Objectifs\n\n\n\n\nRegrouper les donn√©es de plusieurs tables\nEn utilisant les liens entre ces tables\n\n\n\n\n\nJusqu‚Äô√† maintenant, on aurait pu tout faire sous excel‚Ä¶\nFaire une jointure est comme cr√©er un gros tableau\n\n\n\n\nDans les exemples ci-dessous, nous allons utiliser ces 2 tables.\nVous pouvez tout √† fait faire des jointures avec 3 tables, 4 tables‚Ä¶\n\n\n\n\n\nclassDiagram\n    class Joueuse {\n        id_joueuse PK\n        nom\n        prenom\n        elo\n        id_club\n    }\n    \n    class Club {\n        id_club PK\n        nom\n        ville\n    }\n\n\n\n\n\n\n\n\n\n\nJoueuseClub\n\n\n\n\n\n\n\n\n\n\n\n\n\nid_joueuse\nnom\nprenom\nelo\nid_club\n\n\n\n\n1\nGuichard\nPauline\n2357\n3\n\n\n2\nDaulyte\nDeimante\n2371\n1\n\n\n3\nNavrotescu\nAndreea\n2338\n2\n\n\n4\nSebag\nMarie\n2448\n2\n\n\n5\nMillet\nSophie\n2366\n3\n\n\n6\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid_club\nnom\nville\n\n\n\n\n1\nC‚ÄôChartres Echecs\nChartres\n\n\n2\nBischwiller\nBischwiller\n\n\n3\nAsnieres - le Grand Echiquier\nAsnieres\n\n\n4\nTours des Hauts-De-France\nSaint-Quentin\n\n\n\n\n\n\n\n\n\nDes remarques sur ces donn√©es ?\nComment-vous pensez que l‚Äôon va faire la jointure ?"
  },
  {
    "objectID": "doc/cours/jointures.html#jointures",
    "href": "doc/cours/jointures.html#jointures",
    "title": "Jointures entre Tables",
    "section": "",
    "text": "Objectifs\n\n\n\n\nRegrouper les donn√©es de plusieurs tables\nEn utilisant les liens entre ces tables\n\n\n\n\n\nJusqu‚Äô√† maintenant, on aurait pu tout faire sous excel‚Ä¶\nFaire une jointure est comme cr√©er un gros tableau\n\n\n\n\nDans les exemples ci-dessous, nous allons utiliser ces 2 tables.\nVous pouvez tout √† fait faire des jointures avec 3 tables, 4 tables‚Ä¶\n\n\n\n\n\nclassDiagram\n    class Joueuse {\n        id_joueuse PK\n        nom\n        prenom\n        elo\n        id_club\n    }\n    \n    class Club {\n        id_club PK\n        nom\n        ville\n    }\n\n\n\n\n\n\n\n\n\n\nJoueuseClub\n\n\n\n\n\n\n\n\n\n\n\n\n\nid_joueuse\nnom\nprenom\nelo\nid_club\n\n\n\n\n1\nGuichard\nPauline\n2357\n3\n\n\n2\nDaulyte\nDeimante\n2371\n1\n\n\n3\nNavrotescu\nAndreea\n2338\n2\n\n\n4\nSebag\nMarie\n2448\n2\n\n\n5\nMillet\nSophie\n2366\n3\n\n\n6\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid_club\nnom\nville\n\n\n\n\n1\nC‚ÄôChartres Echecs\nChartres\n\n\n2\nBischwiller\nBischwiller\n\n\n3\nAsnieres - le Grand Echiquier\nAsnieres\n\n\n4\nTours des Hauts-De-France\nSaint-Quentin\n\n\n\n\n\n\n\n\n\nDes remarques sur ces donn√©es ?\nComment-vous pensez que l‚Äôon va faire la jointure ?"
  },
  {
    "objectID": "doc/cours/jointures.html#jointure-interne",
    "href": "doc/cours/jointures.html#jointure-interne",
    "title": "Jointures entre Tables",
    "section": "2 Jointure interne",
    "text": "2 Jointure interne\nL‚ÄôINNER JOIN renvoie uniquement les lignes qui ont des correspondances dans les deux tables.\n\n1ere tentative\nSELECT nom,\n       prenom,\n       nom AS club\n  FROM echecs.joueuse\n INNER JOIN echecs.club ON id_club = id_club;\n\nNous affichons nom et prenom de la table joueuse\nNous ajoutons le nom du club\nNous faisons la jointure entre joueuse et club via la colonne id_club\n\n\nDes soucis dans cette requ√™te ? üòï\n\n\n\n2e tentative\nSELECT joueuse.nom,\n       joueuse.prenom,\n       club.nom AS club\n  FROM echecs.joueuse\n INNER JOIN echecs.club ON club.id_club = joueuse.id_club;\n\n√áa fonctionne !\nMais c‚Äôest un peu long d‚Äô√©crire avant chaque colonne le nom de la table.\n\n\n\nAlias\nSELECT j.nom,            -- signifie colonne nom de la table d'alias j\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j  -- d√©clare j comme alias de la table joueuse\n INNER JOIN echecs.club c ON c.id_club = j.id_club;\n\n\n\n\n\n\nAlias\n\n\n\n\nL‚ÄôAlias est comme un surnom pour la table\nPar d√©faut l‚Äôalias de la table est son propre nom (i.e.¬†si vous ne d√©clarez pas d‚Äôalias)\nG√©n√©ralement on utilise comme alias la 1ere lettre ou les 2 premi√®res lettres\n\n\n\n\n\nUSING\n\n\n\n\n\n\nTip\n\n\n\nSi votre base de donn√©es est bien con√ßue, les colonnes utilis√©es pour les jointures portent le m√™me nom dans les deux tables.\nDans ce cas, et uniquement dans ce cas, vous pouvez utiliser le mot cl√© USING √† la place de ON.\n\n\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j\n INNER JOIN echecs.club c USING (id_club);\n\nSi vos colonnes n‚Äôont pas le m√™me nom, pas possible de faire USING\n\n\n\nAu final\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j\n  JOIN echecs.club c USING (id_club);\nVous pouvez m√™me enlever le INNER qui est optionnel.\n\n\n√Ä ne pas faire\n\n\n\n\n\n\nCaution\n\n\n\nIl est aussi possible de faire une jointure avec NATURAL JOIN sans pr√©ciser aucun nom de colonnes. Cela va joindre les tables via les colonnes ayant le m√™me nom dans les 2 tables.\nCette pratique est d√©conseill√©e, car vous ne maitrisez pas les colonnes servant √† la jointure et c‚Äôest visuellement moins parlant.\n\n\n\n\n\n\n\n\nAncienne √©criture\n\n\n\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j,\n       echecs.club c \n WHERE j.id_club = c.id_club;\n\n\n\nAncienne √©criture encore utilis√©e par un certain nombre.\n\n\n\nR√©sultat\n\n\n\n\nnom\nprenom\nclub\n\n\n\n\nDaulyte\nDeimante\nC‚ÄôChartres Echecs\n\n\nNavrotescu\nAndreea\nBischwiller\n\n\nSebag\nMarie\nBischwiller\n\n\nGuichard\nPauline\nAsnieres - le Grand Echiquier\n\n\nMillet\nSophie\nAsnieres - le Grand Echiquier\n\n\n\n\n\nIl n‚Äôy a pas quelque chose qui vous chagrine ? üò¶\n\n\nA votre avis, pourquoi il manque une joueuse ?"
  },
  {
    "objectID": "doc/cours/jointures.html#jointure-externe",
    "href": "doc/cours/jointures.html#jointure-externe",
    "title": "Jointures entre Tables",
    "section": "3 Jointure externe",
    "text": "3 Jointure externe\nCe serait pas mal d‚Äôafficher toutes les joueuses, m√™me celles qui n‚Äôont pas de club.\nComment faire ? üòê\n\n\n\n\n\n\n\nId√©e\n\nLister les noms et pr√©noms des joueuses\n√âventuellement compl√©ter avec le nom du club\n\n\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j\n  LEFT JOIN echecs.club c USING (id_club);\n\n\n\nLEFT JOIN\nUtilisons un LEFT JOIN pour faire une jointure externe :\n\nnous gardons toutes les donn√©es pr√©sentes dans les tables avant le LEFT JOIN\nnous compl√©tons si possible avec les donn√©es des tables apr√®s le LEFT JOIN\n\n\n\n\n\n\n\nRIGHT JOIN\n\n\n\n√Ä l‚Äôinverse, le RIGHT JOIN garde tout ce qu‚Äôil y a apr√®s et compl√©te si possible avec ce qu‚Äôil y a avant.\nIl est moins utilis√© car moins intuitif, mais reste parfois indispensable.\n\n\n\nIl y a certains cas particuliers o√π le RIGHT JOIN est indispensable\nVous verrez parfois LEFT OUTER JOIN\n\n\n\nR√©sultat\n\nLEFT JOINRIGHT JOIN\n\n\n\n\n\n\nnom\nprenom\nclub\n\n\n\n\nDaulyte\nDeimante\nC‚ÄôChartres Echecs\n\n\nNavrotescu\nAndreea\nBischwiller\n\n\nSebag\nMarie\nBischwiller\n\n\nGuichard\nPauline\nAsnieres - le Grand Echiquier\n\n\nMillet\nSophie\nAsnieres - le Grand Echiquier\n\n\nSkrichempko\nAlmira\n\n\n\n\n\n\n\n\n\n\n\nnom\nprenom\nclub\n\n\n\n\nDaulyte\nDeimante\nC‚ÄôChartres Echecs\n\n\nNavrotescu\nAndreea\nBischwiller\n\n\nSebag\nMarie\nBischwiller\n\n\nGuichard\nPauline\nAsnieres - le Grand Echiquier\n\n\nMillet\nSophie\nAsnieres - le Grand Echiquier\n\n\n\n\nTours des Hauts-De-France"
  },
  {
    "objectID": "doc/cours/jointures.html#jointure-compl√®te",
    "href": "doc/cours/jointures.html#jointure-compl√®te",
    "title": "Jointures entre Tables",
    "section": "4 Jointure compl√®te",
    "text": "4 Jointure compl√®te\nLe FULL JOIN permet de faire une jointure bilat√©rale (i.e.¬†un UNION entre les √©l√©ments de la LEFT JOIN et de la RIGHT JOIN)\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j\n  FULL JOIN echecs.club c USING (id_club);\n\nR√©sultat\n\n\n\n\nnom\nprenom\nclub\n\n\n\n\nDaulyte\nDeimante\nC‚ÄôChartres Echecs\n\n\nNavrotescu\nAndreea\nBischwiller\n\n\nSebag\nMarie\nBischwiller\n\n\nGuichard\nPauline\nAsnieres - le Grand Echiquier\n\n\nMillet\nSophie\nAsnieres - le Grand Echiquier\n\n\nSkrichempko\nAlmira\n\n\n\n\n\nTours des Hauts-De-France"
  },
  {
    "objectID": "doc/cours/jointures.html#jointure-crois√©e",
    "href": "doc/cours/jointures.html#jointure-crois√©e",
    "title": "Jointures entre Tables",
    "section": "5 Jointure crois√©e",
    "text": "5 Jointure crois√©e\nCROSS JOIN renvoie le produit cart√©sien des deux tables.\n\n\n\n\nnom\nprenom\nclub\n\n\n\n\nDaulyte\nDeimante\nC‚ÄôChartres Echecs\n\n\nDaulyte\nDeimante\nBischwiller\n\n\nDaulyte\nDeimante\nAsnieres - le Grand Echiquier\n\n\nDaulyte\nDeimante\nTours des Hauts-De-France\n\n\nNavrotescu\nAndreea\nC‚ÄôChartres Echecs\n\n\nNavrotescu\nAndreea\nBischwiller\n\n\nNavrotescu\nAndreea\nAsnieres - le Grand Echiquier\n\n\n‚Ä¶\n‚Ä¶\n‚Ä¶"
  },
  {
    "objectID": "doc/cours/jointures-slides.html#jointures",
    "href": "doc/cours/jointures-slides.html#jointures",
    "title": "Jointures entre Tables",
    "section": "Jointures",
    "text": "Jointures\n\n\n\n\n\n\n\nObjectifs\n\n\n\nRegrouper les donn√©es de plusieurs tables\nEn utilisant les liens entre ces tables\n\n\n\n\n\n\n\nJusqu‚Äô√† maintenant, on aurait pu tout faire sous excel‚Ä¶\nFaire une jointure est comme cr√©er un gros tableau"
  },
  {
    "objectID": "doc/cours/jointures-slides.html#jointure-interne",
    "href": "doc/cours/jointures-slides.html#jointure-interne",
    "title": "Jointures entre Tables",
    "section": "Jointure interne",
    "text": "Jointure interne\nL‚ÄôINNER JOIN renvoie uniquement les lignes qui ont des correspondances dans les deux tables."
  },
  {
    "objectID": "doc/cours/jointures-slides.html#jointure-externe",
    "href": "doc/cours/jointures-slides.html#jointure-externe",
    "title": "Jointures entre Tables",
    "section": "Jointure externe",
    "text": "Jointure externe\nCe serait pas mal d‚Äôafficher toutes les joueuses, m√™me celles qui n‚Äôont pas de club.\nComment faire ? üòê"
  },
  {
    "objectID": "doc/cours/jointures-slides.html#jointure-compl√®te",
    "href": "doc/cours/jointures-slides.html#jointure-compl√®te",
    "title": "Jointures entre Tables",
    "section": "Jointure compl√®te",
    "text": "Jointure compl√®te\nLe FULL JOIN permet de faire une jointure bilat√©rale (i.e.¬†un UNION entre les √©l√©ments de la LEFT JOIN et de la RIGHT JOIN)\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j\n  FULL JOIN echecs.club c USING (id_club);"
  },
  {
    "objectID": "doc/cours/jointures-slides.html#jointure-crois√©e",
    "href": "doc/cours/jointures-slides.html#jointure-crois√©e",
    "title": "Jointures entre Tables",
    "section": "Jointure crois√©e",
    "text": "Jointure crois√©e\nCROSS JOIN renvoie le produit cart√©sien des deux tables.\n\n\n\n\nnom\nprenom\nclub\n\n\n\n\nDaulyte\nDeimante\nC‚ÄôChartres Echecs\n\n\nDaulyte\nDeimante\nBischwiller\n\n\nDaulyte\nDeimante\nAsnieres - le Grand Echiquier\n\n\nDaulyte\nDeimante\nTours des Hauts-De-France\n\n\nNavrotescu\nAndreea\nC‚ÄôChartres Echecs\n\n\nNavrotescu\nAndreea\nBischwiller\n\n\nNavrotescu\nAndreea\nAsnieres - le Grand Echiquier\n\n\n‚Ä¶\n‚Ä¶\n‚Ä¶\n\n\n\n\n\n\nHome ‚Äî Jointures"
  },
  {
    "objectID": "doc/cours/algebre.html",
    "href": "doc/cours/algebre.html",
    "title": "Alg√®bre Relationnelle",
    "section": "",
    "text": "A Relational Model of Data for Large Shared Data Banks, Edgar F. Codd, 1970\nObjectif : Mod√©liser une base de donn√©es ainsi que ses op√©rations\nDans un SGBD relationel, tout est question de relation"
  },
  {
    "objectID": "doc/cours/algebre.html#alg√®bre-relationnelle",
    "href": "doc/cours/algebre.html#alg√®bre-relationnelle",
    "title": "Alg√®bre Relationnelle",
    "section": "",
    "text": "A Relational Model of Data for Large Shared Data Banks, Edgar F. Codd, 1970\nObjectif : Mod√©liser une base de donn√©es ainsi que ses op√©rations\nDans un SGBD relationel, tout est question de relation"
  },
  {
    "objectID": "doc/cours/algebre.html#principaux-op√©rateurs",
    "href": "doc/cours/algebre.html#principaux-op√©rateurs",
    "title": "Alg√®bre Relationnelle",
    "section": "2 Principaux op√©rateurs",
    "text": "2 Principaux op√©rateurs\n\n\n\n\n\n\n\n\nOp√©rateur\nDescription\n\n\n\n\nœÉ (S√©lection)\nFiltrer les lignes selon une condition\n\n\nœÄ (Projection)\nS√©lectionner des colonnes sp√©cifiques\n\n\nU (Union)\nCombiner les lignes de deux relations\n\n\n‚àí (Diff√©rence)\nRetourner les lignes pr√©sentes dans une relation mais pas dans l‚Äôautre\n\n\n‚à© (Intersection)\nTrouver les lignes communes aux deux relations\n\n\n‚®ù (Jointure)\nCombiner deux relations bas√©es sur une condition\n\n\n\n\n\n2.1 S√©lection\n\nPermet de filtrer les lignes d‚Äôune table selon une condition\n\n\n\n‚ö†Ô∏è Mot cl√© SQL associ√© : WHERE\n\nSELECT *\n  FROM echecs.joueuse\n WHERE elo &lt; 2400;\n\n\n\n2.2 Projection\n\nPermet de s√©lectionner certaines colonnes d‚Äôune table.\nMot cl√© SQL associ√© : SELECT\n\nSELECT nom,\n       prenom\n  FROM echecs.joueuse;\n\n\n2.3 Union\n\nCombine les lignes de deux tables ayant le m√™me nombre de colonnes et des types compatibles\n\nSELECT nom,\n       prenom\n  FROM echecs.joueuse\n\nUNION\n\nSELECT nom,\n       prenom\n  FROM echecs.joueur;\n\n\n\n\n\n\nTip\n\n\n\n\nUNION : Combine les r√©sultats des requ√™tes et supprime les doublons\nUNION ALL : Combine les r√©sultats des requ√™tes et garde tous les doublons\n\n\n\n\n\n2.4 Diff√©rence\n\nLignes qui se trouvent dans la premi√®re relation mais pas dans la seconde\n\n-- Joueuses √©voluant dans un club fran√ßais et pas dans un club belge\nSELECT nom,\n       prenom\n  FROM echecs.joueuse_club_fr\n\nEXCEPT\n\nSELECT nom,\n       prenom\n  FROM echecs.joueuse_club_be;\n\nImaginons que vous ayez cr√©√© 2 tables :\n\njoueuses √©voluant dans un club fran√ßais\njoueuses √©voluant dans un club belge\n\n\n\n\n2.5 Intersection\n\nLignes communes aux deux tables\n\n-- Joueuses √©voluant dans un club francais et dans un club belge\nSELECT nom,\n       prenom\n  FROM echecs.joueuse_club_fr\n\nINTERSECT\n\nSELECT nom,\n       prenom\n  FROM echecs.joueuse_club_be;\n\n\n2.6 Jointure\n\nPermet de combiner deux tables bas√©es sur une correspondance entre les colonnes\n\nSELECT j.nom,\n       j.prenom,\n       c.nom AS club\n  FROM echecs.joueuse j\n  JOIN echecs.club c USING (id_club);"
  },
  {
    "objectID": "doc/cours/algebre-slides.html#alg√®bre-relationnelle",
    "href": "doc/cours/algebre-slides.html#alg√®bre-relationnelle",
    "title": "Alg√®bre Relationnelle",
    "section": "Alg√®bre Relationnelle",
    "text": "Alg√®bre Relationnelle\n\nA Relational Model of Data for Large Shared Data Banks, Edgar F. Codd, 1970\nObjectif : Mod√©liser une base de donn√©es ainsi que ses op√©rations\nDans un SGBD relationel, tout est question de relation"
  },
  {
    "objectID": "doc/cours/algebre-slides.html#principaux-op√©rateurs",
    "href": "doc/cours/algebre-slides.html#principaux-op√©rateurs",
    "title": "Alg√®bre Relationnelle",
    "section": "Principaux op√©rateurs",
    "text": "Principaux op√©rateurs\n\n\n\n\n\n\n\n\nOp√©rateur\nDescription\n\n\n\n\nœÉ (S√©lection)\nFiltrer les lignes selon une condition\n\n\nœÄ (Projection)\nS√©lectionner des colonnes sp√©cifiques\n\n\nU (Union)\nCombiner les lignes de deux relations\n\n\n‚àí (Diff√©rence)\nRetourner les lignes pr√©sentes dans une relation mais pas dans l‚Äôautre\n\n\n‚à© (Intersection)\nTrouver les lignes communes aux deux relations\n\n\n‚®ù (Jointure)\nCombiner deux relations bas√©es sur une condition"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html",
    "href": "doc/cours/bases-de-donnees.html",
    "title": "Bases de Donn√©es",
    "section": "",
    "text": "texte (nom, pr√©nom, ville‚Ä¶)\nnum√©rique (age, prix‚Ä¶)\ndate\nliste (comp√©tences, loisirs)\nimage\nfichier\n\n\n\n\n\n\n\n\n\nD√©finition\n\n\n\nUne donn√©e est une information brute qui poss√®de :\n\nun type\nune valeur\n\n\n\n\n\n\n\nFichier txt\nFichier csv\nFichier json\nFichier parquet\nBase de donn√©es"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#une-donn√©e",
    "href": "doc/cours/bases-de-donnees.html#une-donn√©e",
    "title": "Bases de Donn√©es",
    "section": "",
    "text": "texte (nom, pr√©nom, ville‚Ä¶)\nnum√©rique (age, prix‚Ä¶)\ndate\nliste (comp√©tences, loisirs)\nimage\nfichier\n\n\n\n\n\n\n\n\n\nD√©finition\n\n\n\nUne donn√©e est une information brute qui poss√®de :\n\nun type\nune valeur\n\n\n\n\n\n\n\nFichier txt\nFichier csv\nFichier json\nFichier parquet\nBase de donn√©es"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#une-base-de-donn√©es",
    "href": "doc/cours/bases-de-donnees.html#une-base-de-donn√©es",
    "title": "Bases de Donn√©es",
    "section": "2 Une base de donn√©es ?",
    "text": "2 Une base de donn√©es ?\n\n\n\n\n\n\n\nD√©finition\n\n\n\nUne base de donn√©es est un ensemble de donn√©es rassembl√©es et stock√©es de mani√®re organis√©e dans un but sp√©cifique.\n\n\n\n\nTypes ?\nOn n‚Äôutilise pas la m√™me structure pour du texte ou des fichiers."
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#enjeux",
    "href": "doc/cours/bases-de-donnees.html#enjeux",
    "title": "Bases de Donn√©es",
    "section": "3 Enjeux",
    "text": "3 Enjeux\n\nAcc√®s aux donn√©es : langage SQL\nS√©curit√© des donn√©es : seuls les utilisateurs autoris√©s (droits)\nPartage des donn√©es : facile en lecture, mais en √©criture ?\nNon-redondance des donn√©es\nCoh√©rence des donn√©es : respect des contraintes d‚Äôint√©grit√©"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#types-de-bases-de-donn√©es",
    "href": "doc/cours/bases-de-donnees.html#types-de-bases-de-donn√©es",
    "title": "Bases de Donn√©es",
    "section": "4 Types de bases de donn√©es",
    "text": "4 Types de bases de donn√©es\n\n4.1 Hi√©rarchique\n\nDonn√©es organis√©es comme un arbre\nRelations de type parent-enfant\nAnnuaires LDAP, syst√®me de fichiers\n\n\n\n\n\n\nstateDiagram \n    ENSAI --&gt; Permanent\n    ENSAI --&gt; Eleve\n    Permanent --&gt; Enseignant\n    Permanent --&gt; Administratif\n    Eleve --&gt; 1A\n    Eleve --&gt; 2A\n    Eleve --&gt; 3A\n\n\n\n\n\n\n\n\n4.2 R√©seau\n\nOrganis√©e en graphe\nLes enregistrements peuvent avoir plusieurs parents et enfants\nR√©seaux de transports ¬†\n\n\n\n4.3 Relationnelle\n\nOrganis√©e en tables\nLien entre les tables\n\n\nQuelques tables sont g√©rables avec Excel ou Calc.\nMais √ßa devient vite trop compliqu√©.\n\n\n\n4.4 NoSQL\nNombreux sous-types :\n\nCl√©-valeur : donn√©es sous forme de paires cl√©-valeur (DynamoDB)\nColonnes : Organis√©e en colonnes, adapt√©e aux grandes quantit√©s de donn√©es (Cassandra)\nDocument : Stocke des documents semi-structur√©s (JSON, XML) (MongoDB)\nGraphes : Organis√©e sous forme de n≈ìuds et de relations, pour des donn√©es tr√®s connect√©es (Neo4j)\n\n\nNot Only SQL\n\n\n\n4.5 Autres\n\nBases de donn√©es de s√©ries temporelles"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#base-de-donn√©es-relationnelle",
    "href": "doc/cours/bases-de-donnees.html#base-de-donn√©es-relationnelle",
    "title": "Bases de Donn√©es",
    "section": "5 Base de donn√©es relationnelle",
    "text": "5 Base de donn√©es relationnelle\n\n5.1 Table\n\nCompos√©e de lignes et de colonnes\nChaque table repr√©sente une entit√©\nChaque ligne est un enregistrement\nChaque colonne repr√©sente un attribut de l‚Äôentit√©\nTypes de donn√©es : texte, num‚Ä¶\n\n\n\n5.2 Relations entre les tables\n\nCl√© primaire (PK) pour identifier chaque enregistrement dans une table\n\nde mani√®re unique\nsans ambigu√Øt√©\n\nCl√© √©trang√®re (FK) pour cr√©er des liens avec d‚Äôautres tables\n\nattribut d‚Äôune table A\ncorrespond √† la cl√© primaire d‚Äôune table B\n\n\n\n\n5.3 Exemple\nComment relier ces 2 tables ?\n\nune joueuse joue pour un seul club\nUn club peut avoir plusieurs joueuses\n\n\n\n\n\n\nclassDiagram\n    class Joueuse {\n        id_joueuse PK\n        nom\n        prenom\n        elo\n    }\n    \n    class Club {\n        id_club PK\n        nom\n        ville\n    }\n\n\n\n\n\n\n\n\n\njoueuse\n\n\nid_joueuse\nnom\nprenom\nelo\n\n\n\n\n1\nGuichard\nPauline\n2357\n\n\n2\nDaulyte-Cornette\nDeimante\n2371\n\n\n3\nNavrotescu\nAndreea\n2338\n\n\n4\nSebag\nMarie\n2448\n\n\n5\nMillet\nSophie\n2366\n\n\n6\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n\nclub\n\n\n\n\n\n\n\nid_club\nnom\nville\n\n\n\n\n1\nC‚ÄôChartres Echecs\nChartres\n\n\n2\nBischwiller\nBischwiller\n\n\n3\nAsnieres - le Grand Echiquier\nAsnieres\n\n\n4\nTours des Hauts-De-France\nSaint-Quentin\n\n\n\n\n\n\n5.4 Cl√© √©trang√®re\nEn ajoutant une cl√© √©trang√®re.\n\n\n\n\n\nclassDiagram\n    class joueuse {\n        id_joueuse PK\n        nom\n        prenom\n        elo\n        id_club FK\n    }\n    \n    class Club {\n        id_club PK\n        nom\n        ville\n    }\n\n\n\n\n\n\n\n\n\njoueuse\n\n\n\n\n\n\n\n\n\nid_joueuse\nnom\nprenom\nelo\nid_club\n\n\n\n\n1\nGuichard\nPauline\n2357\n3\n\n\n2\nDaulyte\nDeimante\n2371\n1\n\n\n3\nNavrotescu\nAndreea\n2338\n2\n\n\n4\nSebag\nMarie\n2448\n2\n\n\n5\nMillet\nSophie\n2366\n3\n\n\n6\nSkrichempko\nAlmira\n2361\n2\n\n\n\n\n\n\n5.5 Cl√© primaire\n\nAttribut (ou ensemble d‚Äôattributs)\nUnique\nNon nulle\nImmuable\n\n\n\n\n\n\n\nTip\n\n\n\nSauf mention contraire, nous utiliserons une cl√© primaire ‚Äútechnique‚Äù : s√©quence.\n\n\n\nImmuable :\n\nid√©alement stable, elle ne change pas au cours du temps\nPour maintenir l‚Äôint√©grit√© des liens avec d‚Äôautres tables\n\nRemarque : pas obligatoire d‚Äôavoir une cl√© primaire\n\n\n\n5.6 Question\nSi une joueuse peut adh√©rer √† plusieurs clubs ? üòï\n\nPar exemple si notre bdd contient aussi les clubs belges, allemands, espagnols‚Ä¶\n\n\n\n5.7 Table d‚Äôassociation\nCr√©ation d‚Äôune table d‚Äôassociation : adhesion üòÖ\n\n\n\n\n\nclassDiagram\n    class Adhesion {\n        id_joueuse FK\n        id_club FK\n    }\n\n\n\n\n\n\n\n\n\nadhesion\n\n\nid_club\nid_joueuse\n\n\n\n\n1\n2\n\n\n2\n3\n\n\n2\n4\n\n\n2\n6\n\n\n3\n1\n\n\n3\n5\n\n\n4\n1\n\n\n4\n2\n\n\n\n\n\nCl√© primaire ?\n\nid_adhesion\n(id_club, id_joueuse)"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#associations",
    "href": "doc/cours/bases-de-donnees.html#associations",
    "title": "Bases de Donn√©es",
    "section": "6 Associations",
    "text": "6 Associations\nIl existe plusieurs types d‚Äôassociations entre tables.\n\n6.1 Association 1:1\nUne entit√© dans la table A est associ√©e √† une seule entit√© dans la table B.\nExemple :\n\nUne personne a une seule carte vitale\nUne carte vitale appartient √† une seule personne\n\n\non aurait pu tout mettre dans la m√™me table\n\n\n\n6.2 Association 1:n\nUne entit√© dans la table A peut-√™tre associ√©e √† plusieurs entit√©s dans la table B.\nExemple :\n\nUn club est compos√© de plusieurs joueuses\nUne joueuse adh√®re √† un seul club\n\n\n\n6.3 Association n:n\nUne entit√© dans la table A peut-√™tre associ√©e √† plusieurs entit√©s dans la table B.\nEt inversement, une entit√© dans la table B peut-√™tre associ√©e √† plusieurs entit√©s dans la table A.\nExemple :\n\nune joueuse participe √† plusieurs tournois\nUn tournoi regroupe plusieurs joueuses\n\n\n\n6.4 Association r√©cursive\nUne table peut avoir des relations avec elle-m√™me\nIci la table contient une cl√© √©trang√®re qui r√©f√©rence sa propre cl√© primaire.\nExemple :\n\nUn employ√© a un sup√©rieur"
  },
  {
    "objectID": "doc/cours/bases-de-donnees.html#sgbd",
    "href": "doc/cours/bases-de-donnees.html#sgbd",
    "title": "Bases de Donn√©es",
    "section": "7 SGBD",
    "text": "7 SGBD\n\n\n\n\n\n\nD√©finition\n\n\n\nUn Syst√®me de Gestion de Bases de Donn√©es est un logiciel qui permet de cr√©er, g√©rer et manipuler des bases de donn√©es.\nIl fournit des outils pour stocker, r√©cup√©rer, modifier et s√©curiser les donn√©es.\n\n\n\nPostgreSQL\nMySQL\nOracle Database\nSQLite\nMariaDB\n\n\n7.1 PostgreSQL\n\nOpen Source, Libre\nCommunaut√© active\nStable et performant\nBas√© sur le mod√®le client-serveur\nExtension PostGIS (Donn√©es g√©ographiques)\n\n\nutilis√© √† l‚ÄôINSEE\nclient-serveur classique :\n\nle composant serveur central ¬´ postmaster ¬ª g√®re tous les fichiers de bdd\nainsi que toutes les connexions √©tablies pour la communication avec le serveur de bdd.\n\nLes utilisateurs n‚Äôont besoin que d‚Äôun programme client appropri√© pour √©tablir la connexion\n\n\n\n7.2 Outil de Gestion et Administration\nIl est n√©cessaire d‚Äôavoir un outil pour g√©rer et administrer une base de donn√©es.\n\n\n\n\n\n\nTip\n\n\n\n\nPostgreSQL : Install√© sur un serveur, sert de moteur de base de donn√©es\npgAdmin : Interface graphique pour interagir avec PostgreSQL\n\n\n\n\npgAdmin\nDBeaver\n\n\n\n7.3 Kesako\n\nBase de donn√©es : endroit o√π sont stock√©es les informations\nSGBD : logiciel qui permet de cr√©er, g√©rer et manipuler les bases de donn√©es\nOutil de gestion du SGBD : application graphique qui facilite l‚Äôinteraction avec un SGBD\n\n\n\nBDD : biblioth√®que\nSGBD : biblioth√©caire\nOutil : tableau de bord interactif pour les biblioth√©caires\n\n\n\n\n7.4 Exemple\nSite de vente de l√©gumes\n\nClient ¬† - id_client ¬† - nom ¬† - prenom ¬† - mail\nProduit ¬† - id_produit ¬† - nom ¬† - description ¬† - prix\nCommande ¬† - id_commande ¬† - id_client\nLigneCommande ¬† - id_ligne_commande ¬† - id_commande ¬† - id_produit ¬† - quantite"
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#une-donn√©e",
    "href": "doc/cours/bases-de-donnees-slides.html#une-donn√©e",
    "title": "Bases de Donn√©es",
    "section": "Une donn√©e ?",
    "text": "Une donn√©e ?\n\n\ntexte (nom, pr√©nom, ville‚Ä¶)\nnum√©rique (age, prix‚Ä¶)\ndate\nliste (comp√©tences, loisirs)\nimage\nfichier"
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#une-base-de-donn√©es",
    "href": "doc/cours/bases-de-donnees-slides.html#une-base-de-donn√©es",
    "title": "Bases de Donn√©es",
    "section": "Une base de donn√©es ?",
    "text": "Une base de donn√©es ?\n\n\n\n\n\n\n\n\nD√©finition\n\n\nUne base de donn√©es est un ensemble de donn√©es rassembl√©es et stock√©es de mani√®re organis√©e dans un but sp√©cifique.\n\n\n\n\n\n\nTypes ?\nOn n‚Äôutilise pas la m√™me structure pour du texte ou des fichiers."
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#enjeux",
    "href": "doc/cours/bases-de-donnees-slides.html#enjeux",
    "title": "Bases de Donn√©es",
    "section": "Enjeux",
    "text": "Enjeux\n\nAcc√®s aux donn√©es : langage SQL\nS√©curit√© des donn√©es : seuls les utilisateurs autoris√©s (droits)\nPartage des donn√©es : facile en lecture, mais en √©criture ?\nNon-redondance des donn√©es\nCoh√©rence des donn√©es : respect des contraintes d‚Äôint√©grit√©"
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#types-de-bases-de-donn√©es",
    "href": "doc/cours/bases-de-donnees-slides.html#types-de-bases-de-donn√©es",
    "title": "Bases de Donn√©es",
    "section": "Types de bases de donn√©es",
    "text": "Types de bases de donn√©es"
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#base-de-donn√©es-relationnelle",
    "href": "doc/cours/bases-de-donnees-slides.html#base-de-donn√©es-relationnelle",
    "title": "Bases de Donn√©es",
    "section": "Base de donn√©es relationnelle",
    "text": "Base de donn√©es relationnelle"
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#associations",
    "href": "doc/cours/bases-de-donnees-slides.html#associations",
    "title": "Bases de Donn√©es",
    "section": "Associations",
    "text": "Associations\nIl existe plusieurs types d‚Äôassociations entre tables."
  },
  {
    "objectID": "doc/cours/bases-de-donnees-slides.html#sgbd",
    "href": "doc/cours/bases-de-donnees-slides.html#sgbd",
    "title": "Bases de Donn√©es",
    "section": "SGBD",
    "text": "SGBD\n\n\n\n\n\n\n\nD√©finition\n\n\nUn Syst√®me de Gestion de Bases de Donn√©es est un logiciel qui permet de cr√©er, g√©rer et manipuler des bases de donn√©es.\nIl fournit des outils pour stocker, r√©cup√©rer, modifier et s√©curiser les donn√©es.\n\n\n\n\n\nPostgreSQL\nMySQL\nOracle Database\nSQLite\nMariaDB"
  },
  {
    "objectID": "doc/tp/tp1.html",
    "href": "doc/tp/tp1.html",
    "title": "Exercice BDR et SQL",
    "section": "",
    "text": "üöß"
  },
  {
    "objectID": "doc/tp/tp1.html#introduction",
    "href": "doc/tp/tp1.html#introduction",
    "title": "Exercice BDR et SQL",
    "section": "Introduction",
    "text": "Introduction\nVous allez r√©aliser ce TP sur le Datalab du GENES\n\nConnectez-vous au Datalab\n\nVous pouvez √©galement utiliser le Datalab SSPCloud de l‚ÄôINSEE en cr√©ant un compte avec votre mail ENSAI."
  },
  {
    "objectID": "doc/tp/tp1.html#premiers-pas-sur-le-datalab",
    "href": "doc/tp/tp1.html#premiers-pas-sur-le-datalab",
    "title": "Exercice BDR et SQL",
    "section": "1 Premiers pas sur le Datalab",
    "text": "1 Premiers pas sur le Datalab\nüöß"
  },
  {
    "objectID": "doc/tp/tp1.html#premi√®res-requ√™tes",
    "href": "doc/tp/tp1.html#premi√®res-requ√™tes",
    "title": "Exercice BDR et SQL",
    "section": "2 Premi√®res requ√™tes",
    "text": "2 Premi√®res requ√™tes\n\n\n\n\n\n\nCaution\n\n\n\nEn cas d‚Äôindisponibilit√© du Datalab, DBeaver est directement install√© sur les machines.\n\n\n\n2.1 Lancement du service\n\nLancez le service CloudBeaver\n\nAllez dans Catalogue de services\nOnglet Databases\n\n\n\n\n\n\n\n\nCloudBeaver\n\n\n\nCloudBeaver est une application web l√©g√®re d√©di√©e √† la gestion de bases de donn√©es. Elle permet de se connecter √† divers types de bases de donn√©es, qu‚Äôelles soient SQL, NoSQL ou h√©berg√©es dans le cloud, √† partir d‚Äôun seul point d‚Äôacc√®s via un navigateur. CloudBeaver facilite l‚Äôexploration, la modification et la visualisation des donn√©es sans n√©cessiter l‚Äôinstallation de logiciels locaux.\nElle offre √©galement des fonctionnalit√©s de s√©curit√© pour prot√©ger l‚Äôacc√®s aux donn√©es. Son interface conviviale en fait un outil accessible aussi bien aux d√©veloppeurs qu‚Äôaux analystes de donn√©es.\n\n\n\nCr√©ez une nouvelle connexion DuckDB\n\nEn haut √† gauche, cliquez sur le +, puis New connection\nS√©lectionner DuckDB\nCliquez sur le bouton CREATE\n\n\n\n\n\n\n\n\nDuckDB\n\n\n\nDuckDB est un moteur de base de donn√©es relationnelle con√ßu pour des analyses rapides et efficaces, directement int√©gr√© dans des environnements locaux comme Python ou R. Il est optimis√© pour le traitement analytique en colonnes et peut g√©rer des ensembles de donn√©es de grande taille sans n√©cessiter de serveur externe. DuckDB est l√©ger, facile √† int√©grer et offre des performances √©lev√©es pour les requ√™tes SQL.\nIl est souvent utilis√© pour l‚Äôanalyse de donn√©es embarqu√©e ou dans des flux de travail de science des donn√©es. Son architecture permet d‚Äôex√©cuter des requ√™tes SQL sur des fichiers locaux sans migration pr√©alable des donn√©es.\n\n\n\nOuvrez un √©diteur SQL\n\nEn haut √† gauche, cliquez sur SQL\nvous pouvez maintenant saisir du code SQL\n\n\n\n\n2.2 Les pr√©noms\n\n\n\n\n\n\nFichier des pr√©noms\n\n\n\nLe fichier des pr√©noms contient des donn√©es sur les pr√©noms attribu√©s aux enfants n√©s en France depuis 1900. Ces donn√©es sont disponibles au niveau France et par d√©partement.\nUne version au format parquet a √©t√© mise √† disposition sur le site data.gouv par Icem7\n\n\n\n\n\n\n\n\nFichier parquet\n\n\n\nLe format Parquet est un format de fichier de stockage de donn√©es optimis√© pour les syst√®mes de traitement analytique de grande √©chelle. Voici ses principales caract√©ristiques :\n\nStockage en colonnes : Parquet stocke les donn√©es par colonnes plut√¥t que par lignes, ce qui am√©liore l‚Äôefficacit√© de la compression et de l‚Äôacc√®s aux donn√©es dans les charges de travail analytiques, notamment pour les syst√®mes de big data comme Hadoop ou Spark.\nCompression efficace : Gr√¢ce √† sa structure en colonnes, il permet une compression plus efficace que les formats en ligne (comme CSV), ce qui r√©duit la taille des fichiers et acc√©l√®re le traitement.\nOptimis√© pour l‚Äôanalytique : Parquet est con√ßu pour les requ√™tes en lecture intensive, car il permet de charger uniquement les colonnes n√©cessaires pour une analyse, ce qui am√©liore les performances.\nInterop√©rabilit√© : Parquet est compatible avec plusieurs langages et outils d‚Äôanalyse de donn√©es, notamment Hadoop, Spark, Hive, et divers environnements de traitement de donn√©es (Python, Java, etc.).\nFormat auto-descriptif : Il inclut des m√©tadonn√©es qui d√©crivent la structure des donn√©es, permettant de l‚Äôutiliser facilement dans diff√©rents environnements sans n√©cessiter de sch√©mas externes.\n\n\n\n\nCr√©ez une vue prenom qui pointera vers le fichier parquet des pr√©noms\n\nvous pourrez ensuite requ√™ter sur cette vue comme si c‚Äô√©tait une table\n\n\nCREATE OR REPLACE VIEW prenom AS\nFROM 'https://static.data.gouv.fr/resources/base-prenoms-insee-format-parquet/20231121-161435/prenoms-nat2022.parquet'\n\nListez tous les √©l√©ments de prenom\nListez les pr√©noms de l‚Äôann√©e 2022\nListez les pr√©noms de l‚Äôann√©e 2022 donn√©s plus de 2000 fois\nClassez-les par sexe, puis par nombre de fois o√π ils ont √©t√© donn√©\n\n\n\nListez les ann√©es o√π votre pr√©nom a √©t√© donn√©\nClassez par ann√©e d√©scroissante\n\nCREATE OR REPLACE VIEW fd_indcvi_2020 AS FROM ‚Äòhttps://static.data.gouv.fr/resources/recensement-de-la-population-fichiers-detail-individus-localises-au-canton-ou-ville-2020-1/20231023-122841/fd-indcvi-2020.parquet‚Äô;\nDESCRIBE FROM fd_indcvi_2020 ;\nSELECT arm, voit, ROUND(sum(ipondi/nperr::int)) AS eft FROM fd_indcvi_2020 WHERE dept = ‚Äò75‚Äô AND NPERR &lt;&gt; ‚ÄòZ‚Äô GROUP BY ALL ;"
  },
  {
    "objectID": "doc/cours/intro-slides.html#bases-de-donn√©es-relationnelles-et-sql",
    "href": "doc/cours/intro-slides.html#bases-de-donn√©es-relationnelles-et-sql",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Bases de Donn√©es Relationnelles et SQL",
    "text": "Bases de Donn√©es Relationnelles et SQL\n\n6h CM\n18h TP\nludovic.deneuville@ensai.fr\nbureau 161\nsur la base des cours de Benjamin Girault"
  },
  {
    "objectID": "doc/cours/intro-slides.html#objectifs",
    "href": "doc/cours/intro-slides.html#objectifs",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Objectifs",
    "text": "Objectifs\n\nInterrogation\nCr√©ation\nMod√©lisation\nSavoir utiliser le langage SQL\n\n\nUML pour la mod√©lisation"
  },
  {
    "objectID": "doc/cours/intro-slides.html#sql",
    "href": "doc/cours/intro-slides.html#sql",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "SQL",
    "text": "SQL\n\nSyntaxe simple\nEfficace\nTr√®s utilis√©\n\n\n\nc‚Äôest LA comp√©tence √† avoir\n√ßa s‚Äôencapsule dans plein de langages (R, Python, Julia, Stata, SAS‚Ä¶)\nutile pour Big Data"
  },
  {
    "objectID": "doc/cours/intro-slides.html#conventions",
    "href": "doc/cours/intro-slides.html#conventions",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Conventions",
    "text": "Conventions\n\n&lt;...&gt; : texte √† remplacer\n[...] : √©l√©ment optionnel\nUne requ√™te se termine par un ;\nMots cl√©s en MAJUSCULE\n-- Ce qui vient ensuite est comment√©\n\n\n\nParfois possible d‚Äôutiliser /* commentaire */\n; : m√™me si les logiciels souvent s‚Äôen moquent"
  },
  {
    "objectID": "doc/cours/intro-slides.html#les-tp",
    "href": "doc/cours/intro-slides.html#les-tp",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Les TP",
    "text": "Les TP\n\n5 TP + 1 TD\nDatalab\ncloudBeaver"
  },
  {
    "objectID": "doc/cours/intro-slides.html#√©valuation",
    "href": "doc/cours/intro-slides.html#√©valuation",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "√âvaluation",
    "text": "√âvaluation\n\nLundi 6 Janvier 10h\nDur√©e : 2h\nSur papier\nSans documents"
  },
  {
    "objectID": "doc/cours/intro-slides.html#bibliographie",
    "href": "doc/cours/intro-slides.html#bibliographie",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Bibliographie",
    "text": "Bibliographie\n\nhttps://laurent-audibert.developpez.com/Cours-BD/?page=introduction-bases-de-donnees\nhttps://upinfo.univ-cotedazur.fr/im/bases-de-donnees/\nhttps://openclassrooms.com/fr/courses/6971126-implementez-vos-bases-de-donnees-relationnelles-avec-sql/7139618-decouvrez-le-systeme-de-gestion-de-base-de-donnees-sgbd\nhttps://oseox.fr/sql/\nhttps://learnsql.fr/blog/aide-memoire-pour-les-entretiens-sql/\n\n\n\nd√©sol√© s‚Äôil y a des fautes, j‚Äôai √©crit ce cours un peu dans l‚Äôurgence\nn‚Äôh√©sitez pas √† me les notifier (pas de point bonus)\nmoi j‚Äôai le droit, apr√®s je serai assez intransigent si vous laissez des fautes dans vos rapports\n\n\n\n\n\nHome ‚Äî Introduction √† SQL"
  },
  {
    "objectID": "doc/cours/intro.html",
    "href": "doc/cours/intro.html",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "",
    "text": "6h CM\n18h TP\nludovic.deneuville@ensai.fr\nbureau 161\nsur la base des cours de Benjamin Girault"
  },
  {
    "objectID": "doc/cours/intro.html#bases-de-donn√©es-relationnelles-et-sql",
    "href": "doc/cours/intro.html#bases-de-donn√©es-relationnelles-et-sql",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "",
    "text": "6h CM\n18h TP\nludovic.deneuville@ensai.fr\nbureau 161\nsur la base des cours de Benjamin Girault"
  },
  {
    "objectID": "doc/cours/intro.html#objectifs",
    "href": "doc/cours/intro.html#objectifs",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Objectifs",
    "text": "Objectifs\n\nInterrogation\nCr√©ation\nMod√©lisation\nSavoir utiliser le langage SQL\n\n\nUML pour la mod√©lisation"
  },
  {
    "objectID": "doc/cours/intro.html#sql",
    "href": "doc/cours/intro.html#sql",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "SQL",
    "text": "SQL\n\nSyntaxe simple\nEfficace\nTr√®s utilis√©\n\n\n\nc‚Äôest LA comp√©tence √† avoir\n√ßa s‚Äôencapsule dans plein de langages (R, Python, Julia, Stata, SAS‚Ä¶)\nutile pour Big Data"
  },
  {
    "objectID": "doc/cours/intro.html#conventions",
    "href": "doc/cours/intro.html#conventions",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Conventions",
    "text": "Conventions\n\n&lt;...&gt; : texte √† remplacer\n[...] : √©l√©ment optionnel\nUne requ√™te se termine par un ;\nMots cl√©s en MAJUSCULE\n-- Ce qui vient ensuite est comment√©\n\n\n\nParfois possible d‚Äôutiliser /* commentaire */\n; : m√™me si les logiciels souvent s‚Äôen moquent\n\n\n\nRequ√™tes SQL jolies\n\nretour √† la ligne\nmots cl√©s align√©s\n\n\n\n\npasbien.sql\n\nSELECT c.nom AS club, AVG(j.elo) AS moyenne_elo FROM joueuse j INNER JOIN club c USING (id_club) WHERE mail IS NOT NULL GROUP BY c.nom ORDER BY 2 DESC;\n\n\n\n\n\n\nbien.sql\n\nSELECT c.nom AS club, \n       AVG(j.elo) AS moyenne_elo\n  FROM joueuse j \n INNER JOIN club c USING (id_club) \n WHERE j.mail IS NOT NULL \n GROUP BY c.nom \n ORDER BY 2 DESC;\n\n\n\nFaites un effort pour vous m√™me et pour vos relecteurs"
  },
  {
    "objectID": "doc/cours/intro.html#les-tp",
    "href": "doc/cours/intro.html#les-tp",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Les TP",
    "text": "Les TP\n\n5 TP + 1 TD\nDatalab\ncloudBeaver\n\n\nBien\n\nLire attentivement les consignes\nEssayer de r√©soudre par soi m√™me\nChercher sur internet\nDemander de l‚Äôaide √† ses camarades\nDemander de l‚Äôaide √† l‚Äôenseignant\n\n\n√ßa peut paraitre un peu infentilisant mais c‚Äôest n√©cessaire de le rappeler !!!\n\n\n\nPas bien\n\nPoster l‚Äô√©noncer sur ChatGPT\nCopier / Coller la r√©ponse sans rien comprendre\n\n\n\nJe ne dis pas qu‚Äôil ne faut jamais utiliser les LLM\n√ßa peut servir pour d√©bgugger\nou pour des taches sans VA\nmais pas pour apprendre et retenir"
  },
  {
    "objectID": "doc/cours/intro.html#√©valuation",
    "href": "doc/cours/intro.html#√©valuation",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "√âvaluation",
    "text": "√âvaluation\n\nLundi 6 Janvier 10h\nDur√©e : 2h\nSur papier\nSans documents"
  },
  {
    "objectID": "doc/cours/intro.html#bibliographie",
    "href": "doc/cours/intro.html#bibliographie",
    "title": "Bases de Donn√©es Relationnelles et SQL",
    "section": "Bibliographie",
    "text": "Bibliographie\n\nhttps://laurent-audibert.developpez.com/Cours-BD/?page=introduction-bases-de-donnees\nhttps://upinfo.univ-cotedazur.fr/im/bases-de-donnees/\nhttps://openclassrooms.com/fr/courses/6971126-implementez-vos-bases-de-donnees-relationnelles-avec-sql/7139618-decouvrez-le-systeme-de-gestion-de-base-de-donnees-sgbd\nhttps://oseox.fr/sql/\nhttps://learnsql.fr/blog/aide-memoire-pour-les-entretiens-sql/\n\n\n\nd√©sol√© s‚Äôil y a des fautes, j‚Äôai √©crit ce cours un peu dans l‚Äôurgence\nn‚Äôh√©sitez pas √† me les notifier (pas de point bonus)\nmoi j‚Äôai le droit, apr√®s je serai assez intransigent si vous laissez des fautes dans vos rapports"
  },
  {
    "objectID": "doc/cours/agregations-slides.html#donn√©es-utilis√©es",
    "href": "doc/cours/agregations-slides.html#donn√©es-utilis√©es",
    "title": "Agr√©gations",
    "section": "Donn√©es utilis√©es",
    "text": "Donn√©es utilis√©es\n\n\n\n\n\n\n\n\n\n\n\nid_joueuse\nnom\nprenom\nelo\nclub\n\n\n\n\n1\nGuichard\nPauline\n2357\nAsnieres\n\n\n2\nDaulyte\nDeimante\n2371\nChartres\n\n\n3\nNavrotescu\nAndreea\n2338\nAsnieres\n\n\n4\nSebag\nMarie\n2448\nBischwiller\n\n\n5\nMillet\nSophie\n2366\nAsnieres\n\n\n6\nSkrichempko\nAlmira\n2361\nBischwiller"
  },
  {
    "objectID": "doc/cours/agregations-slides.html#questions",
    "href": "doc/cours/agregations-slides.html#questions",
    "title": "Agr√©gations",
    "section": "Questions",
    "text": "Questions\nQuelques questions que l‚Äôon peut se poser :\n\n\nQuel est le id_joueuse maximum ?\nQuel est le nombre de joueuses ?\nQuelle est la moyenne des elo par club ?"
  },
  {
    "objectID": "doc/cours/agregations-slides.html#compter-les-lignes",
    "href": "doc/cours/agregations-slides.html#compter-les-lignes",
    "title": "Agr√©gations",
    "section": "Compter les lignes",
    "text": "Compter les lignes\nSELECT COUNT(*)\n  FROM echecs.joueuse;\n\n\n\n\ncount\n\n\n\n\n6\n\n\n\n\n\nSELECT COUNT(*)\n  FROM echecs.joueuse\n WHERE elo &lt; 2400;\n\n\n\n\ncount\n\n\n\n\n5"
  },
  {
    "objectID": "doc/cours/agregations-slides.html#somme",
    "href": "doc/cours/agregations-slides.html#somme",
    "title": "Agr√©gations",
    "section": "Somme",
    "text": "Somme\nSELECT SUM(elo)\n  FROM echecs.joueuse;\n\n\n\n\nsum_elo\n\n\n\n\n14223\n\n\n\n\n\nSELECT SUM(elo) / COUNT(elo)\n  FROM echecs.joueuse;"
  },
  {
    "objectID": "doc/cours/agregations-slides.html#stats-descriptives",
    "href": "doc/cours/agregations-slides.html#stats-descriptives",
    "title": "Agr√©gations",
    "section": "Stats descriptives",
    "text": "Stats descriptives\nSELECT MAX(elo),\n       MIN(elo),\n       AVG(elo)\n  FROM echecs.joueuse;\n\n\n\n\nmax_elo\nmin_elo\navg_elo\n\n\n\n\n2448\n2338\n2373.5\n\n\n\n\n\n\n\n\n\n\nTip\n\n\nVous pouvez √©galement calculer : VARIANCE, STDDEV.\n\n\n\n\nComment afficher la joueuse avec le plus grand elo ? üòµ"
  },
  {
    "objectID": "doc/cours/agregations-slides.html#regroupement",
    "href": "doc/cours/agregations-slides.html#regroupement",
    "title": "Agr√©gations",
    "section": "Regroupement",
    "text": "Regroupement\nComment obtenir la moyenne elo par club ?\n\nSELECT club,\n       AVG(elo)\n  FROM echecs.joueuse\n GROUP BY club;\n\n\n\n\nclub\navg_elo\n\n\n\n\nAsnieres\n2372.4\n\n\nChartres\n2371.0\n\n\nBischwiller\n2404.5\n\n\n\n\n\n\nVous pouvez utiliser ROUND() pour arrondir."
  },
  {
    "objectID": "doc/cours/agregations.html",
    "href": "doc/cours/agregations.html",
    "title": "Agr√©gations",
    "section": "",
    "text": "id_joueuse\nnom\nprenom\nelo\nclub\n\n\n\n\n1\nGuichard\nPauline\n2357\nAsnieres\n\n\n2\nDaulyte\nDeimante\n2371\nChartres\n\n\n3\nNavrotescu\nAndreea\n2338\nAsnieres\n\n\n4\nSebag\nMarie\n2448\nBischwiller\n\n\n5\nMillet\nSophie\n2366\nAsnieres\n\n\n6\nSkrichempko\nAlmira\n2361\nBischwiller"
  },
  {
    "objectID": "doc/cours/agregations.html#donn√©es-utilis√©es",
    "href": "doc/cours/agregations.html#donn√©es-utilis√©es",
    "title": "Agr√©gations",
    "section": "",
    "text": "id_joueuse\nnom\nprenom\nelo\nclub\n\n\n\n\n1\nGuichard\nPauline\n2357\nAsnieres\n\n\n2\nDaulyte\nDeimante\n2371\nChartres\n\n\n3\nNavrotescu\nAndreea\n2338\nAsnieres\n\n\n4\nSebag\nMarie\n2448\nBischwiller\n\n\n5\nMillet\nSophie\n2366\nAsnieres\n\n\n6\nSkrichempko\nAlmira\n2361\nBischwiller"
  },
  {
    "objectID": "doc/cours/agregations.html#questions",
    "href": "doc/cours/agregations.html#questions",
    "title": "Agr√©gations",
    "section": "2 Questions",
    "text": "2 Questions\nQuelques questions que l‚Äôon peut se poser :\n\n\nQuel est le id_joueuse maximum ?\nQuel est le nombre de joueuses ?\nQuelle est la moyenne des elo par club ?"
  },
  {
    "objectID": "doc/cours/agregations.html#compter-les-lignes",
    "href": "doc/cours/agregations.html#compter-les-lignes",
    "title": "Agr√©gations",
    "section": "3 Compter les lignes",
    "text": "3 Compter les lignes\nSELECT COUNT(*)\n  FROM echecs.joueuse;\n\n\n\n\ncount\n\n\n\n\n6\n\n\n\n\n\nSELECT COUNT(*)\n  FROM echecs.joueuse\n WHERE elo &lt; 2400;\n\n\n\n\ncount\n\n\n\n\n5"
  },
  {
    "objectID": "doc/cours/agregations.html#somme",
    "href": "doc/cours/agregations.html#somme",
    "title": "Agr√©gations",
    "section": "4 Somme",
    "text": "4 Somme\nSELECT SUM(elo)\n  FROM echecs.joueuse;\n\n\n\n\nsum_elo\n\n\n\n\n14223\n\n\n\n\n\nSELECT SUM(elo) / COUNT(elo)\n  FROM echecs.joueuse;"
  },
  {
    "objectID": "doc/cours/agregations.html#stats-descriptives",
    "href": "doc/cours/agregations.html#stats-descriptives",
    "title": "Agr√©gations",
    "section": "5 Stats descriptives",
    "text": "5 Stats descriptives\nSELECT MAX(elo),\n       MIN(elo),\n       AVG(elo)\n  FROM echecs.joueuse;\n\n\n\n\nmax_elo\nmin_elo\navg_elo\n\n\n\n\n2448\n2338\n2373.5\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nVous pouvez √©galement calculer : VARIANCE, STDDEV.\n\n\n\nComment afficher la joueuse avec le plus grand elo ? üòµ\n\n\n5.1 Sous-requ√™te\nEn utilisant une sous-requ√™te :\n\nSELECT MAX(elo) FROM joueuse ‚û°Ô∏è renvoie un nombre\nNous pouvons ensuite tester si elo est √©gal √† ce nombre\n\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE elo = (SELECT MAX(elo) FROM echecs.joueuse);"
  },
  {
    "objectID": "doc/cours/agregations.html#regroupement",
    "href": "doc/cours/agregations.html#regroupement",
    "title": "Agr√©gations",
    "section": "6 Regroupement",
    "text": "6 Regroupement\nComment obtenir la moyenne elo par club ?\n\nSELECT club,\n       AVG(elo)\n  FROM echecs.joueuse\n GROUP BY club;\n\n\n\n\nclub\navg_elo\n\n\n\n\nAsnieres\n2372.4\n\n\nChartres\n2371.0\n\n\nBischwiller\n2404.5\n\n\n\n\n\n\nVous pouvez utiliser ROUND() pour arrondir.\n\n\n6.1 Colonnes du GROUP BY\nVous pouvez grouper en utilisant plusieurs colonnes.\n\n\n\n\n\n\nImportant\n\n\n\nLes colonnes pr√©sentes dans le SELECT doivent imp√©rativement √™tre pr√©sentes dans le GROUP BY.\nL‚Äôinverse n‚Äôest pas vrai. Vous pouvez avoir des colonnes du GROUP BY que vous n‚Äôaffichez pas dans le SELECT.\n\n\n\nje dis bien colonnes et pas fonctions d‚Äôaggr√©gation\n\n\n\n6.2 Filtre suite au GROUP BY\nComment faire pour afficher uniquement les clubs o√π la moyenne √©lo est inf√©rieure √† 2400 ?\n\nSELECT club,\n       AVG(elo)\n  FROM echecs.joueuse\n GROUP BY club\nHAVING AVG(elo) &lt; 2400;\n\n\n\n\nclub\navg_elo\n\n\n\n\nAsnieres\n2372.4\n\n\nChartres\n2371.0"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#structured-query-language",
    "href": "doc/cours/sql-intro-slides.html#structured-query-language",
    "title": "SQL - Introduction",
    "section": "Structured Query Language",
    "text": "Structured Query Language\n\n\n\n\n\n\n\nD√©finition\n\n\nLe SQL est un langage standardis√© utilis√© pour interagir avec des bases de donn√©es relationnelles.\nIl permet de cr√©er, manipuler, interroger et g√©rer les donn√©es stock√©es dans des tables."
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#d√©finition-de-donn√©es",
    "href": "doc/cours/sql-intro-slides.html#d√©finition-de-donn√©es",
    "title": "SQL - Introduction",
    "section": "D√©finition de Donn√©es",
    "text": "D√©finition de Donn√©es\n\nIci nous n‚Äôallons travailler que sur une seule table √† la fois"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#ins√©rer-des-donn√©es",
    "href": "doc/cours/sql-intro-slides.html#ins√©rer-des-donn√©es",
    "title": "SQL - Introduction",
    "section": "Ins√©rer des donn√©es",
    "text": "Ins√©rer des donn√©es\n\n\n\n\n\nclassDiagram\n    class Club {\n        id_club PK\n        nom\n        ville\n        date_creation\n    }\n\n\n\n\n\n\n\nINSERT INTO echecs.club \n(nom,                              ville,            date_creation)\nVALUES           \n('C''Chartres Echecs',            'Chartres',        '1991-09-01'),\n('Bischwiller',                   'Bischwiller',     '1976-09-01'),\n('Asnieres - le Grand Echiquier', 'Asnieres',        '1987-03-20'),\n('Tours des Hauts-De-France',     'Saint-Quentin',   '1999-12-01');\n\n\nPourquoi l‚Äôon n‚Äôins√®re pas la colonne id_club ? üòï\n\n\nAttention √† bien mettre les virgules au bon endroit"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#lire-des-donn√©es",
    "href": "doc/cours/sql-intro-slides.html#lire-des-donn√©es",
    "title": "SQL - Introduction",
    "section": "Lire des donn√©es",
    "text": "Lire des donn√©es\nSELECT * FROM table pour tout afficher.\nSELECT *\n  FROM echecs.club;\n\n\n\n\n\n\n\n\n\n\n\n\nid_club\nnom\nville\ndate_creation\n\n\n\n\n1\nC‚ÄôChartres Echecs\nChartres\n1991-09-01\n\n\n2\nBischwiller\nBischwiller\n1976-09-01\n\n\n3\nAsnieres - le Grand Echiquier\nAsnieres\n1987-03-20\n\n\n4\nTours des Hauts-De-France\nSaint-Quentin\n1999-12-01"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#mise-√†-jour-de-donn√©es",
    "href": "doc/cours/sql-intro-slides.html#mise-√†-jour-de-donn√©es",
    "title": "SQL - Introduction",
    "section": "Mise √† jour de donn√©es",
    "text": "Mise √† jour de donn√©es\nUPDATE echecs.joueuse\n   SET elo = 2399\n WHERE id_joueuse = 1;\n\n\n\nSELECT id_joueuse,\n       nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE id_joueuse = 1;\n\n\n\n\n\n\n\n\n\n\nid_joueuse\nnom\nprenom\nelo\n\n\n\n\n1\nGuichard\nPauline\n2399"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#suppression-de-donn√©es",
    "href": "doc/cours/sql-intro-slides.html#suppression-de-donn√©es",
    "title": "SQL - Introduction",
    "section": "Suppression de donn√©es",
    "text": "Suppression de donn√©es\nSupprimer une joueuse :\nDELETE FROM echecs.joueuse\n WHERE id_joueuse = 1;\nVider la table :\nDELETE FROM echecs.joueuse"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#validation-des-op√©rations",
    "href": "doc/cours/sql-intro-slides.html#validation-des-op√©rations",
    "title": "SQL - Introduction",
    "section": "Validation des op√©rations",
    "text": "Validation des op√©rations\nEt si ? üò±\nVous avez ex√©cut√© par erreur DELETE FROM joueuse;\n\nIl y a un syst√®me de transactions avec les mots cl√©s :\n\nBEGIN\nCOMMIT\nROLLBACK\n\n\n\n\n\n\n\n\nAuto-commit\n\n\nAttention : il n‚Äôy a pas de garde-fou lorsque vous √™tes en Auto-commit.\n\n\n\n\n\nüöß TODO √† approfondir plus tard"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#dates-et-heures",
    "href": "doc/cours/sql-intro-slides.html#dates-et-heures",
    "title": "SQL - Introduction",
    "section": "Dates et Heures",
    "text": "Dates et Heures"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#valeurs-nulles",
    "href": "doc/cours/sql-intro-slides.html#valeurs-nulles",
    "title": "SQL - Introduction",
    "section": "Valeurs nulles",
    "text": "Valeurs nulles"
  },
  {
    "objectID": "doc/cours/sql-intro-slides.html#divers",
    "href": "doc/cours/sql-intro-slides.html#divers",
    "title": "SQL - Introduction",
    "section": "Divers",
    "text": "Divers"
  },
  {
    "objectID": "doc/cours/sql-intro.html",
    "href": "doc/cours/sql-intro.html",
    "title": "SQL - Introduction",
    "section": "",
    "text": "D√©finition\n\n\n\nLe SQL est un langage standardis√© utilis√© pour interagir avec des bases de donn√©es relationnelles.\nIl permet de cr√©er, manipuler, interroger et g√©rer les donn√©es stock√©es dans des tables.\n\n\n\n\nSQL est un language norm√© dont la derni√®re version est SQL:2023.\n\n\n\n\n\n\nCaution\n\n\n\nLes SGBD ne respectent pas exactement la norme SQL.\n√Ä un niveau avanc√© d‚Äôutilisation, il y a des diff√©rences entre les SGBD.\n\n\n\n\n\n\nD√©finition de Donn√©es\nManipulation de Donn√©es\nContr√¥le des Transactions\nContr√¥le d‚Äôacc√®s aux Donn√©es\n\n\n\nManipulation de Donn√©es ¬† - CRUD\nD√©finition de Donn√©es ¬† - Cr√©er/Modifier/Supprimer une table\nContr√¥le des Transactions ¬† - BEGIN, COMMIT, ROLLBACK\nContr√¥le d‚Äôacc√®s aux Donn√©es ¬† - GRANT REVOKE"
  },
  {
    "objectID": "doc/cours/sql-intro.html#structured-query-language",
    "href": "doc/cours/sql-intro.html#structured-query-language",
    "title": "SQL - Introduction",
    "section": "",
    "text": "D√©finition\n\n\n\nLe SQL est un langage standardis√© utilis√© pour interagir avec des bases de donn√©es relationnelles.\nIl permet de cr√©er, manipuler, interroger et g√©rer les donn√©es stock√©es dans des tables.\n\n\n\n\nSQL est un language norm√© dont la derni√®re version est SQL:2023.\n\n\n\n\n\n\nCaution\n\n\n\nLes SGBD ne respectent pas exactement la norme SQL.\n√Ä un niveau avanc√© d‚Äôutilisation, il y a des diff√©rences entre les SGBD.\n\n\n\n\n\n\nD√©finition de Donn√©es\nManipulation de Donn√©es\nContr√¥le des Transactions\nContr√¥le d‚Äôacc√®s aux Donn√©es\n\n\n\nManipulation de Donn√©es ¬† - CRUD\nD√©finition de Donn√©es ¬† - Cr√©er/Modifier/Supprimer une table\nContr√¥le des Transactions ¬† - BEGIN, COMMIT, ROLLBACK\nContr√¥le d‚Äôacc√®s aux Donn√©es ¬† - GRANT REVOKE"
  },
  {
    "objectID": "doc/cours/sql-intro.html#d√©finition-de-donn√©es",
    "href": "doc/cours/sql-intro.html#d√©finition-de-donn√©es",
    "title": "SQL - Introduction",
    "section": "2 D√©finition de Donn√©es",
    "text": "2 D√©finition de Donn√©es\n\nIci nous n‚Äôallons travailler que sur une seule table √† la fois\n\n\n2.1 Cr√©er une table\nCREATE TABLE joueuse (\n¬† ¬† id_joueuse     INT,\n¬† ¬† nom            TEXT,\n¬† ¬† prenom         TEXT,\n¬† ¬† date_naissance DATE,\n¬† ¬† elo            INT,\n¬† ¬† est_arbitre    BOOLEAN,\n¬† ¬† code_pays      TEXT,\n    taux_victoires FLOAT\n);\n\nC‚Äôest comme cr√©er les colonnes d‚Äôun tableau.\n\n\n\n2.2 CREATE avanc√©\nCREATE TABLE echecs.joueuse (\n    id_joueuse     SERIAL          PRIMARY KEY,   \n    nom            VARCHAR(50)     NOT NULL, \n    prenom         VARCHAR(50)     NOT NULL, \n    date_naissance TIMESTAMP,                 \n    elo            INT             CHECK (elo &gt; 0),  \n    mail           VARCHAR(100)    UNIQUE,         \n    est_arbitre    BOOLEAN         DEFAULT false,\n    code_pays      VARCHAR(2),          \n    taux_victoires FLOAT  \n);\n\n\n\n\n\n\n\nContraintes\n\n\n\n\nNOT NULL : l‚Äôattribut doit √™tre renseign√©\nUNIQUE : chaque valeur de l‚Äôattribut est unique (pas de doublons)\nCHECK : pour v√©rifier la coh√©rence d‚Äôun attribut\n\n\n\n\n\n\nSch√©ma echecs : j‚Äôy viens juste apr√®s\nSERIAL : s√©quence num√©rique, on en reparle dans quelques minutes\nVARCHAR(50) pour limiter la taille des valeurs\nDEFAULT : valeur par d√©faut (principalement lors de l‚ÄôINSERT)\n\nImportant : La PK est NOT NULL et UNIQUE\n\n\n\n2.3 Sch√©ma\nUtile lorsque le nombre de table devient grand.\n\nOrganisation des objets, clart√©\nGestion des permissions\n\nCREATE SCHEMA echecs;\n\n\nVente de l√©gume\nUtiliser la m√™me bdd pour la gestion RH, le m√©tier et la compta\ncr√©er un sch√©ma pour s√©parer les tables\n\n\n\n\n2.3.1 Table dans un sch√©ma\nCREATE TABLE echecs.club (\n    id_club          SERIAL          PRIMARY KEY,  \n    nom              VARCHAR(100)    NOT NULL,   \n    ville            VARCHAR(100)    NOT NULL, \n    date_creation    DATE\n);\n\nD√©placer la table joueuse dans le sch√©ma echecs :\nALTER TABLE joueuse SET SCHEMA echecs;\n\nC‚Äôest comme cr√©er un fichier dans un dossier.\nPar d√©faut les objets sont cr√©√©s dans le sch√©ma public.\n\n\n\n\n2.4 Bonnes pratiques\n\nNom de table repr√©sentatif et au singulier\nPas de majuscules, pas d‚Äôaccents\nMots s√©par√©s par des underscores (snake_case)\nNe pas utiliser de mots cl√©s r√©serv√©s (date, user‚Ä¶)\nNe pas avoir de colonne qui porte le m√™me nom que sa table\n\n\ndans les requ√™tes : mots cl√©s en majuscules\n\n\n\n2.5 Modifier une colonne\nModifier le type :\nALTER TABLE joueuse\nALTER COLUMN nom TYPE VARCHAR(80);\n\nRenommer :\nALTER TABLE joueuse\nRENAME COLUMN date_naissance TO dnais;\n\n\n2.6 Cr√©er/Supprimer une colonne\nAjout :\nALTER TABLE joueuse\nADD COLUMN id_club INT;\n\nSuppression :\nALTER TABLE joueuse\nDROP COLUMN taux_victoires;\n\n\n2.7 D√©finir une cl√© √©trang√®re\n\nNous venons de cr√©er une colonne id_club\nLions maintenant cette colonne √† la table club\n\nALTER TABLE joueuse\nADD CONSTRAINT fk_id_club\nFOREIGN KEY (id_club)\nREFERENCES club(id_club);\n\n\n\n\n\n\nCl√© √©trang√®re\n\n\n\nDans la table joueuse, l‚Äôattribut id_club a pour valeur soit :\n\nune valeur de id_club de la table club\nNULL\n\n\n\n\n\n2.8 Autres possibilit√©s\n\nRenommer une table\nAjouter / Supprimer une contrainte\nD√©finir / Supprimer une valeur par d√©faut\n\n\n\n2.9 Supprimer une table\nDROP TABLE joueuse;\n\n\n\n\n\n\nWarning\n\n\n\nCette op√©ration est irr√©versible !\nElle supprime d√©finitivement :\n\nla table\ntoutes les donn√©es qu‚Äôelle contient\n\n\n\nDROP TABLE IF EXISTS joueuse;      -- utile pour les scripts SQL"
  },
  {
    "objectID": "doc/cours/sql-intro.html#ins√©rer-des-donn√©es",
    "href": "doc/cours/sql-intro.html#ins√©rer-des-donn√©es",
    "title": "SQL - Introduction",
    "section": "3 Ins√©rer des donn√©es",
    "text": "3 Ins√©rer des donn√©es\n\n\n\n\n\nclassDiagram\n    class Club {\n        id_club PK\n        nom\n        ville\n        date_creation\n    }\n\n\n\n\n\n\n\nINSERT INTO echecs.club \n(nom,                              ville,            date_creation)\nVALUES           \n('C''Chartres Echecs',            'Chartres',        '1991-09-01'),\n('Bischwiller',                   'Bischwiller',     '1976-09-01'),\n('Asnieres - le Grand Echiquier', 'Asnieres',        '1987-03-20'),\n('Tours des Hauts-De-France',     'Saint-Quentin',   '1999-12-01');\n\n\nPourquoi l‚Äôon n‚Äôins√®re pas la colonne id_club ? üòï\n\n\nAttention √† bien mettre les virgules au bon endroit\n\n\n3.1 S√©quence\nLa colonne id_club est une s√©quence g√©r√©e par le SGBD.\nLes valeurs sont g√©n√©r√©es automatiquement √† l‚Äôinsertion et la s√©quence est incr√©ment√©e (1, 2, 3‚Ä¶).\n\n\n\n\n\n\nS√©quences\n\n\n\n\n\nIl est possible de cr√©er et g√©rer ses propres s√©quences :\nCREATE SEQUENCE nom_sequence START 1 INCREMENT BY 1;\n\nSELECT currval('nom_sequence'); -- derni√®re valeur utilis√©e\nSELECT nextval('nom_sequence'); -- prochaine valeur\n\nALTER SEQUENCE nom_sequence RESTART WITH nouvelle_valeur;\n\nDROP SEQUENCE nom_sequence;\n\n\n\n\n\nPas de double quotes en SQL !!!\n‚Äô‚Äô : Pour ajouter un simple quote dans une chaine"
  },
  {
    "objectID": "doc/cours/sql-intro.html#lire-des-donn√©es",
    "href": "doc/cours/sql-intro.html#lire-des-donn√©es",
    "title": "SQL - Introduction",
    "section": "4 Lire des donn√©es",
    "text": "4 Lire des donn√©es\nSELECT * FROM table pour tout afficher.\nSELECT *\n  FROM echecs.club;\n\n\n\n\n\n\n\n\n\n\n\n\nid_club\nnom\nville\ndate_creation\n\n\n\n\n1\nC‚ÄôChartres Echecs\nChartres\n1991-09-01\n\n\n2\nBischwiller\nBischwiller\n1976-09-01\n\n\n3\nAsnieres - le Grand Echiquier\nAsnieres\n1987-03-20\n\n\n4\nTours des Hauts-De-France\nSaint-Quentin\n1999-12-01\n\n\n\n\n\n\n4.1 Colonnes √† afficher\nListez les colonnes √† afficher apr√®s le SELECT\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse;\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nGuichard\nPauline\n2357\n\n\nDaulyte-Cornette\nDeimante\n2371\n\n\nNavrotescu\nAndreea\n2338\n\n\nSebag\nMarie\n2448\n\n\nMillet\nSophie\n2366\n\n\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n\n4.2 Filter les lignes\nFiltrez sur les lignes avec une clause WHERE.\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE elo &gt; 2400;\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nSebag\nMarie\n2448\n\n\n\n\n\n\n\n4.3 Plusieurs filtres\nLe mot cl√© AND permet d‚Äôajouter d‚Äôautres filtres.\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE elo &lt; 2400\n   AND prenom LIKE 'A%';\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nNavrotescu\nAndreea\n2338\n\n\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n1 seul WHERE\nplusieurs AND\n\n\nVous pouvez autoriser plusieurs conditions avec OR.\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE elo &gt; 2400\n    OR prenom LIKE 'A%';\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nSebag\nMarie\n2448\n\n\nNavrotescu\nAndreea\n2338\n\n\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n\n4.4 LIKE\nSELECT *\n  FROM echecs.joueuse\n WHERE prenom LIKE 'A%'         -- commence par A\n    OR prenom LIKE '%A'         -- termine par A\n    OR prenom LIKE '%A%'        -- contient au moins un A\n    OR UPPER(prenom) LIKE '%A%' -- contient au moins un A ou un a\n    OR prenom LIKE 'A__'        -- commence par A suivi de 2 autres caract√®res\n\n% : repr√©sente entre 0 et une infinit√© de caract√®res\n_ : repr√©sente exactement 1 caract√®re\n\n\n\n\n\n\n\nCaution\n\n\n\nAttention aux MAJUSCULES ‚â† minuscules\n\n\n\n\n4.5 Plage de valeurs\nBETWEEN permet de sp√©cifier une plage de valeurs num√©riques.\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE elo BETWEEN 2350 AND 2400;\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nGuichard\nPauline\n2357\n\n\nDaulyte-Cornette\nDeimante\n2371\n\n\nMillet\nSophie\n2366\n\n\nSkrichempko\nAlmira\n2361\n\n\n\n\n\n\n\n4.6 Valeurs dans une liste\nVous pouvez sp√©cifier qu‚Äôun attribut doit appartenir √† un liste avec IN.\nOu inversement avec NOT IN.\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE prenom IN ('Deimante', 'Sophie');\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nDaulyte-Cornette\nDeimante\n2371\n\n\nMillet\nSophie\n2366\n\n\n\n\n\n\nPossible de lister des valeurs num√©riques\n\n\n\n4.7 Filtre sur les attributs bool√©ens\nSELECT *\n  FROM echecs.joueuse\n WHERE est_arbitre IS TRUE;\n\n\n4.8 Ordonner le r√©sultat\nORDER BY pour ordonner selon plusieurs colonnes.\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n ORDER BY elo,\n          taux_victoires DESC;\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nNavrotescu\nAndreea\n2338\n\n\nGuichard\nPauline\n2357\n\n\nSkrichempko\nAlmira\n2361\n\n\nMillet\nSophie\n2366\n\n\nDaulyte-Cornette\nDeimante\n2371\n\n\nSebag\nMarie\n2448\n\n\n\n\n\n\n\nORDER BY 2 : 2e colonne\n\n\n\n\n4.9 Afficher n lignes\nSELECT nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n LIMIT 3;\n\n\n\n\n\n\nnom\nprenom\nelo\n\n\n\n\nGuichard\nPauline\n2357\n\n\nDaulyte-Cornette\nDeimante\n2371\n\n\nNavrotescu\nAndreea\n2338"
  },
  {
    "objectID": "doc/cours/sql-intro.html#mise-√†-jour-de-donn√©es",
    "href": "doc/cours/sql-intro.html#mise-√†-jour-de-donn√©es",
    "title": "SQL - Introduction",
    "section": "5 Mise √† jour de donn√©es",
    "text": "5 Mise √† jour de donn√©es\nUPDATE echecs.joueuse\n   SET elo = 2399\n WHERE id_joueuse = 1;\n\n\n\nSELECT id_joueuse,\n       nom,\n       prenom,\n       elo\n  FROM echecs.joueuse\n WHERE id_joueuse = 1;\n\n\n\n\n\n\n\n\n\n\nid_joueuse\nnom\nprenom\nelo\n\n\n\n\n1\nGuichard\nPauline\n2399\n\n\n\n\n\n\n5.1 M√†j globale\nImaginons que vous souhaitez modifier le elo de toutes les joueuses.\nUPDATE echecs.joueuse\n   SET elo = elo + 100;\n\n\n\n\n\n\nWarning\n\n\n\nG√©n√©ralement un message d‚Äôavertissement vous demande si vous √™tes certains de vouloir mettre √† jour toutes les lignes."
  },
  {
    "objectID": "doc/cours/sql-intro.html#suppression-de-donn√©es",
    "href": "doc/cours/sql-intro.html#suppression-de-donn√©es",
    "title": "SQL - Introduction",
    "section": "6 Suppression de donn√©es",
    "text": "6 Suppression de donn√©es\nSupprimer une joueuse :\nDELETE FROM echecs.joueuse\n WHERE id_joueuse = 1;\nVider la table :\nDELETE FROM echecs.joueuse"
  },
  {
    "objectID": "doc/cours/sql-intro.html#validation-des-op√©rations",
    "href": "doc/cours/sql-intro.html#validation-des-op√©rations",
    "title": "SQL - Introduction",
    "section": "7 Validation des op√©rations",
    "text": "7 Validation des op√©rations\nEt si ? üò±\nVous avez ex√©cut√© par erreur DELETE FROM joueuse;\n\nIl y a un syst√®me de transactions avec les mots cl√©s :\n\nBEGIN\nCOMMIT\nROLLBACK\n\n\n\n\n\n\n\nAuto-commit\n\n\n\nAttention : il n‚Äôy a pas de garde-fou lorsque vous √™tes en Auto-commit.\n\n\n\nüöß TODO √† approfondir plus tard"
  },
  {
    "objectID": "doc/cours/sql-intro.html#dates-et-heures",
    "href": "doc/cours/sql-intro.html#dates-et-heures",
    "title": "SQL - Introduction",
    "section": "8 Dates et Heures",
    "text": "8 Dates et Heures\n\n8.1 Type DATE\nQuelques op√©rations avec le type DATE.\nSELECT nom,\n       prenom,\n       EXTRACT(YEAR FROM date_naissance) AS annee_naissance,\n       AGE(CURRENT_DATE, date_naissance) AS age\n  FROM echecs.joueuse\n WHERE date_naissance &gt;= '1991-04-20'\n    OR date_naissance BETWEEN '1991-04-20' AND '1992-12-31'\n    OR EXTRACT(MONTH FROM date_naissance) = 4;\n\n\n8.2 Type TIMESTAMP\nPour stocker la date et l‚Äôheure\nCREATE TABLE echecs.club (\n    id_club          SERIAL          PRIMARY KEY,  \n    nom              VARCHAR(100)    NOT NULL,   \n    ville            VARCHAR(100)    NOT NULL, \n    date_creation    TIMESTAMP\n);\n\n\n8.2.1 Utilisations\nINSERT INTO echecs.club (nom, ville, date_creation)\nVALUES ('C''Chartres Echecs', 'Chartres', '1991-09-01 20:00:00');\n\nINSERT INTO echecs.club (nom, ville, date_creation)\nVALUES ('Bischwiller', 'Bischwiller', CURRENT_TIMESTAMP);\nVous pouvez utiliser √©galement sur le type TIMESTAMP :\n\nEXTRACT,\nBETWEEN,\nles op√©rateurs de comparaison"
  },
  {
    "objectID": "doc/cours/sql-intro.html#valeurs-nulles",
    "href": "doc/cours/sql-intro.html#valeurs-nulles",
    "title": "SQL - Introduction",
    "section": "9 Valeurs nulles",
    "text": "9 Valeurs nulles\n\n9.1 Tester si un attribut est NULL\nJoueuse dont le mail n‚Äôest pas renseign√© :\nSELECT *\n  FROM echecs.joueuse\n WHERE mail IS NULL; \nEt inversemenent\nSELECT *\n  FROM echecs.joueuse\n WHERE mail IS NOT NULL;\n\n\n9.2 COALESCE\n\n\n\n\n\n\nLa fonction COALESCE\n\n\n\nEn PostgreSQL, la fonction COALESCE :\n\nprend un nombre quelconque de param√®tres\nretourne le 1er param√®tre dont la valeur est NON NULLE\n\n\n\n\nc(x1, x2, ... xn):\n  if x1:\n    return x1\n  else:\n    return c(x2, ... xn)\nNVL pour Oracle (√† ne pas confondre avec MVL)\n\n\n\n9.3 COALESCE - Exemple\nSELECT COALESCE(mail, tel, 'pas de contact')\n  FROM echecs.joueuse\n WHERE id_joueuse = 1\nLa requ√™te ci-dessus va afficher :\n\nSi mail est NON NULL ‚û°Ô∏è mail\nSinon\n\nSi tel NON NULL ‚û°Ô∏è tel\nSinon ‚û°Ô∏è pas de contact"
  },
  {
    "objectID": "doc/cours/sql-intro.html#divers",
    "href": "doc/cours/sql-intro.html#divers",
    "title": "SQL - Introduction",
    "section": "10 Divers",
    "text": "10 Divers\n\n10.1 Jouer avec les colonnes\nSELECT CONCAT(nom, ' ', prenom) AS nom_complet,\n       elo\nFROM echecs.joueuse;\n\n\n\n\n\n\nnom_complet\nelo\n\n\n\n\nGuichard Pauline\n2357\n\n\nDaulyte-Cornette Deimante\n2371\n\n\nNavrotescu Andreea\n2338\n\n\nSebag Marie\n2448\n\n\nMillet Sophie\n2366\n\n\nSkrichempko Almira\n2361"
  },
  {
    "objectID": "doc/glossaire.html",
    "href": "doc/glossaire.html",
    "title": "Glossaire",
    "section": "",
    "text": "üöß"
  },
  {
    "objectID": "doc/glossaire.html#table",
    "href": "doc/glossaire.html#table",
    "title": "Glossaire",
    "section": "Table",
    "text": "Table\nStructure de donn√©es dans une base de donn√©es relationnelle qui contient :\n\ndes lignes repr√©sentant des entit√©s\ndes colonnes repr√©sentant un attribut de ces entit√©s\n\nSynonymes : Relation\n\nLigne\nUn ensemble de valeurs correspondant √† un objet ou une entit√© dans une table.\nSynonymes : Enregistrement, Entit√©, Tuple, Observation\n\n\nColonne\nUne structure verticale dans une table qui contient un type sp√©cifique de donn√©es.\nSynonymes : Attribut, Champs, Propri√©t√©, Variable, Dimension\n\n\nCl√© primaire\nUn champ ou un ensemble de champs qui identifie de mani√®re unique chaque ligne d‚Äôune table.\n\n\nCl√© √©trang√®re\nUn champ dans une table qui est une r√©f√©rence √† la cl√© primaire d‚Äôune autre table.\nElle est utilis√©e pour √©tablir une relation entre deux tables.\n\nVoici un glossaire des termes cl√©s associ√©s aux bases de donn√©es, SQL, et PostgreSQL :\n\n\nBases de Donn√©es\n\nBase de donn√©es (BDD) : Un ensemble organis√© de donn√©es, g√©n√©ralement stock√©es et accessibles √©lectroniquement. Elle est utilis√©e pour faciliter la gestion, la r√©cup√©ration, l‚Äôajout, la mise √† jour et la suppression des donn√©es.\nSyst√®me de Gestion de Base de Donn√©es (SGBD) : Logiciel permettant de cr√©er, g√©rer et manipuler des bases de donn√©es. Il permet la gestion des donn√©es et des utilisateurs via des interfaces (commandes SQL, API, etc.).\nIndex : Un moyen d‚Äôacc√©l√©rer les requ√™tes en cr√©ant une structure de donn√©es qui permet une recherche rapide sur des colonnes sp√©cifiques.\nSch√©ma : Un mod√®le ou une structure de donn√©es qui d√©finit la fa√ßon dont les donn√©es sont organis√©es dans une base de donn√©es. Un sch√©ma peut contenir des tables, des vues, des fonctions, etc.\nJointure (Join) : Une op√©ration qui permet de combiner des donn√©es provenant de plusieurs tables en fonction de relations d√©finies entre elles.\nTransaction : Un ensemble d‚Äôop√©rations qui sont ex√©cut√©es de mani√®re atomique (tout ou rien). Si une transaction √©choue, toutes les modifications sont annul√©es.\n\n\n\n\nSQL (Structured Query Language)\n\nSQL : Un langage standardis√© pour interagir avec des bases de donn√©es relationnelles. SQL permet de cr√©er, lire, mettre √† jour et supprimer des donn√©es (CRUD).\nSELECT : Commande utilis√©e pour extraire des donn√©es d‚Äôune ou plusieurs tables.\nINSERT : Commande utilis√©e pour ins√©rer de nouvelles lignes de donn√©es dans une table.\nUPDATE : Commande utilis√©e pour modifier les donn√©es existantes dans une table.\nDELETE : Commande utilis√©e pour supprimer des lignes dans une table.\nWHERE : Clause utilis√©e pour filtrer les r√©sultats d‚Äôune requ√™te en fonction de conditions sp√©cifiques.\nGROUP BY : Clause utilis√©e pour regrouper les r√©sultats d‚Äôune requ√™te selon un ou plusieurs attributs.\nORDER BY : Clause utilis√©e pour trier les r√©sultats d‚Äôune requ√™te selon un ou plusieurs crit√®res.\nJOIN : Op√©ration qui combine des donn√©es de plusieurs tables en fonction de conditions de correspondance.\nHAVING : Clause utilis√©e pour filtrer les r√©sultats agr√©g√©s d‚Äôune requ√™te, g√©n√©ralement utilis√©e apr√®s un GROUP BY.\nDISTINCT : Mot-cl√© utilis√© pour √©liminer les doublons dans les r√©sultats d‚Äôune requ√™te.\nLIMIT : Limite le nombre de r√©sultats renvoy√©s par une requ√™te.\nINSERT INTO SELECT : Commande permettant d‚Äôins√©rer le r√©sultat d‚Äôune requ√™te SELECT dans une autre table.\nALTER : Commande permettant de modifier la structure d‚Äôune table (par exemple, ajouter ou supprimer des colonnes).\nDROP : Commande permettant de supprimer une table ou un autre objet dans une base de donn√©es.\nCREATE : Commande utilis√©e pour cr√©er des tables, des vues, des index, des proc√©dures, etc.\nINDEX : Structure de donn√©es permettant de rendre les recherches plus rapides sur des colonnes de tables.\nTRANSACTION : Un bloc de commandes SQL qui peut √™tre valid√© (COMMIT) ou annul√© (ROLLBACK) dans son ensemble.\nCOMMIT : Commande permettant de valider une transaction.\nROLLBACK : Commande permettant d‚Äôannuler une transaction et de revenir √† l‚Äô√©tat ant√©rieur.\n\n\n\n\nPostgreSQL\n\nPostgreSQL : Un syst√®me de gestion de base de donn√©es relationnelle open-source avanc√©. Il supporte les types de donn√©es complexes, la gestion des transactions, les index, les jointures, et d‚Äôautres fonctionnalit√©s avanc√©es.\npgAdmin : Interface graphique pour administrer des bases de donn√©es PostgreSQL. Elle permet de cr√©er, modifier, supprimer des objets de base de donn√©es, et d‚Äôex√©cuter des requ√™tes SQL.\nTableau de Bord PostgreSQL : L‚Äôinterface utilisateur pour administrer et g√©rer des instances de PostgreSQL, √† travers des outils graphiques ou des requ√™tes SQL.\nVacuum : Processus dans PostgreSQL qui nettoie et lib√®re l‚Äôespace occup√© par des tuples morts dans les tables et les index. Il optimise aussi la performance de la base de donn√©es.\nReplication : M√©canisme dans PostgreSQL permettant de copier les donn√©es d‚Äôune base de donn√©es vers une autre pour des fins de sauvegarde ou de haute disponibilit√©.\nSequence : Un objet dans PostgreSQL qui g√©n√®re des valeurs num√©riques uniques, souvent utilis√© pour les valeurs de cl√©s primaires auto-incr√©ment√©es.\nForeign Data Wrapper (FDW) : Permet √† PostgreSQL de se connecter √† des bases de donn√©es externes et de traiter les donn√©es comme si elles √©taient locales.\nExtension : Une fonctionnalit√© suppl√©mentaire dans PostgreSQL permettant d‚Äôajouter des modules sp√©cifiques pour √©tendre les capacit√©s du syst√®me (par exemple, PostGIS pour la gestion des donn√©es g√©ographiques).\nPL/pgSQL : Un langage proc√©dural utilis√© dans PostgreSQL pour √©crire des fonctions et des proc√©dures stock√©es.\nArray : Un type de donn√©es qui permet de stocker plusieurs valeurs dans une seule colonne dans PostgreSQL.\nJSON/JSONB : Types de donn√©es pour stocker des documents JSON dans PostgreSQL, o√π JSONB offre des performances sup√©rieures pour les op√©rations de lecture et d‚Äôindexation.\nCTE (Common Table Expression) : Une sous-requ√™te qui peut √™tre utilis√©e dans une requ√™te principale pour am√©liorer la lisibilit√© et la structure des requ√™tes complexes.\n\n\n\n\nAutres Concepts\n\nACID : Propri√©t√©s des transactions garantissant leur int√©grit√© : Atomicit√©, Coh√©rence, Isolation, Durabilit√©.\nNormalisation : Processus de conception d‚Äôune base de donn√©es pour √©liminer la redondance et les anomalies, en divisant les donn√©es en tables li√©es par des cl√©s √©trang√®res.\nSch√©ma : Un ensemble d‚Äôobjets (tables, vues, fonctions, etc.) organis√©s dans une base de donn√©es.\nDDL (Data Definition Language) : Langage SQL utilis√© pour d√©finir et g√©rer la structure de la base de donn√©es (par exemple, CREATE, ALTER, DROP).\nDML (Data Manipulation Language) : Langage SQL utilis√© pour manipuler les donn√©es dans les tables (par exemple, SELECT, INSERT, UPDATE, DELETE).\nDCL (Data Control Language) : Langage SQL utilis√© pour contr√¥ler l‚Äôacc√®s aux donn√©es (par exemple, GRANT, REVOKE).\nSQL Injection : Technique d‚Äôattaque o√π des requ√™tes SQL malveillantes sont ins√©r√©es dans un formulaire ou une URL pour manipuler la base de donn√©es."
  }
]